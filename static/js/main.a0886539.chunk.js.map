{"version":3,"sources":["resources/img/vision.png","components/appHeader/AppHeader.js","resources/img/mjolnir.png","services/MarvelService.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/errorBoundary.js","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","RandomChar","state","loading","error","marvelService","onCharLoaded","length","slice","setState","onCharLoading","onError","updateChar","Math","floor","random","then","catch","this","errorMessage","spinner","content","onClick","mjolnir","Component","View","imgStyle","CharList","charList","newItemLoading","charEnded","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","refItems","setRef","ref","push","focusOnItem","forEach","item","classList","remove","add","focus","arr","i","tabIndex","props","onCharSelected","onKeyPress","e","key","renderItems","disabled","Skeleton","CharInfo","charId","prevProps","skeleton","ErrorBoundary","errorInfo","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0886539.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","\r\n\r\nclass MarvelService {\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    _apiKey = 'apikey=97b1d428bc2220921be9c9e79453e95f';\r\n    _baseOffset = 210;\r\n\r\n    getResource = async (url) => {\r\n        let res = await fetch(url);\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n\r\n        return await res.json();\r\n    }\r\n\r\n    getAllCharacters = async (offset = this._baseOffset) => {\r\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);//Получаем всех персонажей\r\n        return res.data.results.map(this._transformCharacter);\r\n    }  \r\n\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`); //Получаем персонажа\r\n        return this._transformCharacter(res.data.results[0]);\r\n    }\r\n    \r\n\r\n    _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description,\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n}\r\n\r\nexport default MarvelService;","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain',\r\n            margin: '0 auto'}} src={img} alt='error'/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nimport { Component } from 'react';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\n\nclass RandomChar extends Component {\n    state = {\n        char: {},\n        loading: true, //true -персонаж загружается, запускается spinner, когда загрузился - loading: false \n        error : false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() { //ВЫЗЫВАЕМ ЭТУ ФУНКЦИЮ ПОСЛЕ ЗАГРУЗКИ КОМПОНЕНТА\n        this.updateChar();\n    }\n\n    onCharLoaded = (char) => { //загружаем персонажа\n        if (!char.description) {\n            char.description = 'Description is none';\n        } else if (char.description.length > 200) {\n            char.description = char.description.slice(0, 200) + '...'\n        }\n        this.setState({char, loading: false})//char: char \n    }\n\n    onCharLoading = () => { //Включаем spinner при обновлении персонажа\n        this.setState({loading: true})\n    }\n\n    onError = () => { //сообщение об ошибке ( если такого персонажа нет)\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000); //выбираем случаный id персонажа\n        this.onCharLoading(); //вызываем spinner, пока персонаж загружается\n        this.marvelService\n            .getCharacter(id) //вызываем getCharacter из MarvelService передавая id \n            .then(this.onCharLoaded) //когда персонаж получен загружаем его в state вызывая onCharLoaded\n            .catch(this.onError) // вызываем onError , если получаем ошибку( такого персонажа нет)\n    }\n\n    render() {\n        const {char, loading, error} = this.state; //вытаскиваем нужные данные из state\n        const errorMessage = error ? <ErrorMessage /> : null; \n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || error) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\">\n                        <div onClick={this.updateChar} className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    \n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n        <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n        <div className=\"randomchar__info\">\n            <p className=\"randomchar__name\">{name}</p>\n            <p className=\"randomchar__descr\">\n                {description}\n            </p>\n            <div className=\"randomchar__btns\">\n                <a href={homepage} className=\"button button__main\">\n                    <div className=\"inner\">homepage</div>\n                </a>\n                <a href={wiki} className=\"button button__secondary\">\n                    <div className=\"inner\">Wiki</div>\n                </a>\n            </div>\n        </div>\n    </div>\n    )\n}\n\nexport default RandomChar;","import './charList.scss';\n\nimport PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport MarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\n\n\nclass CharList extends Component {\n    state = {\n        charList: [],\n        loading: true, // при первом запуске появляется spinner\n        error: false,\n        newItemLoading: false,\n        offset: 210,\n        charEnded: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.onRequest(); //первый раз вызываем onRequest без аргумента\n    }\n\n    onRequest = (offset) => {\n        this.onCharListLoading();\n        this.marvelService.getAllCharacters(offset)\n            .then(this.onCharListLoaded) //сюда приходят данные и идут в newCharList\n            .catch(this.onError)\n    }\n\n    onCharListLoading = () => {\n        this.setState({\n            newItemLoading: true\n        })\n    }\n\n    onCharListLoaded = (newCharList) => { //данные в newCharList получаются из метода  выше \n        let ended = false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n\n\n        this.setState(({offset,charList}) => ({\n            charList: [...charList, ...newCharList], //старый массив + новый\n            loading: false,\n            newItemLoading: false,\n            offset: offset + 9,\n            charEnded: ended\n        }))\n    }\n\n    onError = () => { //сообщение об ошибке ( если такого персонажа нет)\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    refItems = [];\n\n    setRef = (ref) => { //сюда приходит элемент li\n        this.refItems.push(ref); // элемент li пушится в refItems\n    }\n\n    focusOnItem = (id) => { //перебираем элемент li который пришел сюда\n        this.refItems.forEach(item => item.classList.remove('char__item_selected'));\n        this.refItems[id].classList.add('char__item_selected');\n        this.refItems[id].focus();\n    }\n\n    renderItems(arr) { //ПЕРЕБОРКА МАССИВА С ПЕРСОНАЖАМИ\n        const items = arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            \n            return (\n                <li \n                    className=\"char__item\" \n                    key={item.id} \n                    tabIndex={0}\n                    ref={this.setRef} //делаем ссылку на этот элемент li \n                    //ПЕРЕДАЕМ id персонажа в onCharSelected в App\n                    onClick={() => {\n                        this.props.onCharSelected(item.id);\n                        this.focusOnItem(i); //i - порядковый номер в массиве\n                    }}\n                    onKeyPress={(e) => {\n                        if (e.key === ' ' || e.key === 'Enter') {\n                            this.props.onCharSelected(item.id);\n                            this.focusOnItem(i);\n                        }\n                    }}\n                    >\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                        <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        });\n\n        return (\n            <ul className=\"char__grid\">\n                {items}\n            </ul>\n        )\n    }\n\n    render() {\n        const {charList, loading, error, offset, newItemLoading, charEnded} = this.state;\n\n        const items = this.renderItems(charList);\n\n        const errorMessage = error ? <ErrorMessage /> : null; \n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || error) ? items : null;\n        \n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button \n                    className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    style={{'display': charEnded ? 'none' : 'block'}}\n                    onClick={() => this.onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n    \n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\nimport './charInfo.scss';\n\nimport PropTypes from 'prop-types';\nimport MarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\nimport Skeleton from '../skeleton/Skeleton'\n\nclass CharInfo extends Component {\n\n    state = {\n        char: null,\n        loading: false, //ИЗНАЧАЛЬНО FALSE , Т.К. ВКЛЮЧАТЬСЯ БУДЕТ СПИННЕР БУДЕТ ТОЛЬКО ПРИ ЗАПРОСЕ ПОЛЬЗОВАТЕЛЯ\n        error: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.charId !== prevProps.charId) { //ЕСЛИ ТЕКУЩИЙ charId не равен предыдущему charId\n            this.updateChar();\n        }\n    }\n\n    updateChar = () => {\n        const {charId} = this.props; //charId из App\n        if (!charId) {\n            return;\n        }\n\n        this.onCharLoading(); //показывает спиннер перед запросом\n        this.marvelService\n            .getCharacter(charId) \n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n    onCharLoaded = (char) => { \n        this.setState({\n            char, \n            loading: false\n        }) \n    }\n    \n    onCharLoading = () => { \n        this.setState({\n            loading: true\n        })\n    }\n    \n    onError = () => { \n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n\n    render() {\n        const {char, loading, error} = this.state;\n\n        const skeleton = char || loading || error ? null : <Skeleton />\n        const errorMessage = error ? <ErrorMessage /> : null; \n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || error || !char) ? <View char={char}/> : null;\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char; \n\n    let imgStyle = {'objectFit' : 'cover'};\n    if (char.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'unset'};\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">Homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'NO COMICS'}\n                {\n                    comics.map((item, i) => {\n                        if (i >= 10) return; //Если списков больше или равно 10, отрисовка остальных останавливается\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render () {\r\n        if (this.state.error) {\r\n            return <h2><ErrorMessage/></h2>\r\n        }\r\n\r\n        \r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import decoration from '../../resources/img/vision.png';\nimport { Component } from \"react\";\n\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/errorBoundary\";\n\n\nclass App extends Component {\n\n    state = {\n        selectedChar: null\n    }\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <RandomChar/>\n                    <div className=\"char__content\">\n                        <CharList onCharSelected={this.onCharSelected}/>\n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.selectedChar}/>\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\n\nimport './style/style.scss';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}